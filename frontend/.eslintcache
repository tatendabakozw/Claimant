[{"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Products\\Products.jsx":"1","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\HOC\\PharmacyRoute.jsx":"2","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Login\\Login.jsx":"3","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\StateContext\\reducer.js":"4","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Payment\\Payment.jsx":"5","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\App.js":"6","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\index.js":"7","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Checkout\\Checkout.jsx":"8","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Layout\\DashboardLayout.jsx":"9","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Navbar\\Navbar.jsx":"10","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Home.jsx":"11","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Layout\\DesktopLayout.jsx":"12","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Footer\\Footer.jsx":"13","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\About\\About.jsx":"14","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\StateContext\\StateProvider.js":"15","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Customers\\Customers.jsx":"16","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Settings\\Settings.jsx":"17","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\PharmacyInfo\\PharmacyInfo.jsx":"18","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Orders\\Orders.jsx":"19","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Dashboard\\Dashboard.jsx":"20","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\ProductDescription\\ProductDescription.jsx":"21","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Pharmacies\\Pharmacies.jsx":"22","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Patients\\Patients.jsx":"23","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Notifications\\Notifications.jsx":"24","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Register\\Register.jsx":"25","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\HomeProducts\\HomeProducts.jsx":"26","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Loading\\FillSpinner\\index.js":"27","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Loading\\Loading.jsx":"28","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Loading\\Domino\\index.js":"29","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Loading\\Grid\\index.js":"30","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\PharmacyCatalogue\\PharmacyCatalogue.jsx":"31"},{"size":26940,"mtime":1611311044601,"results":"32","hashOfConfig":"33"},{"size":1196,"mtime":1611314540208,"results":"34","hashOfConfig":"33"},{"size":11627,"mtime":1611311271890,"results":"35","hashOfConfig":"33"},{"size":1476,"mtime":1611447497820,"results":"36","hashOfConfig":"33"},{"size":234,"mtime":1611340442256,"results":"37","hashOfConfig":"33"},{"size":3065,"mtime":1611491806091,"results":"38","hashOfConfig":"33"},{"size":434,"mtime":1610907017348,"results":"39","hashOfConfig":"33"},{"size":7811,"mtime":1611368184461,"results":"40","hashOfConfig":"33"},{"size":6559,"mtime":1611402753525,"results":"41","hashOfConfig":"33"},{"size":10368,"mtime":1611418764357,"results":"42","hashOfConfig":"33"},{"size":9393,"mtime":1611451974383,"results":"43","hashOfConfig":"33"},{"size":527,"mtime":1611265322319,"results":"44","hashOfConfig":"33"},{"size":2863,"mtime":1611272597484,"results":"45","hashOfConfig":"33"},{"size":4104,"mtime":1611311084336,"results":"46","hashOfConfig":"33"},{"size":434,"mtime":1610907261411,"results":"47","hashOfConfig":"33"},{"size":243,"mtime":1610979125556,"results":"48","hashOfConfig":"33"},{"size":8137,"mtime":1611458093523,"results":"49","hashOfConfig":"33"},{"size":5109,"mtime":1611233368832,"results":"50","hashOfConfig":"33"},{"size":3189,"mtime":1611368364192,"results":"51","hashOfConfig":"33"},{"size":3384,"mtime":1611367738043,"results":"52","hashOfConfig":"33"},{"size":4900,"mtime":1611338687735,"results":"53","hashOfConfig":"33"},{"size":6403,"mtime":1611453412297,"results":"54","hashOfConfig":"33"},{"size":1151,"mtime":1611367554005,"results":"55","hashOfConfig":"33"},{"size":313,"mtime":1611366406268,"results":"56","hashOfConfig":"33"},{"size":10037,"mtime":1611493894509,"results":"57","hashOfConfig":"33"},{"size":2460,"mtime":1611402468289,"results":"58","hashOfConfig":"33"},{"size":1782,"mtime":1611447102397,"results":"59","hashOfConfig":"33"},{"size":336,"mtime":1611449258196,"results":"60","hashOfConfig":"33"},{"size":3715,"mtime":1611448533489,"results":"61","hashOfConfig":"33"},{"size":2531,"mtime":1611449062181,"results":"62","hashOfConfig":"33"},{"size":1247,"mtime":1611454083623,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"1cad2fk",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Products\\Products.jsx",["137","138"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport DashboardLayout from '../../Layout/DashboardLayout'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport AddBoxRoundedIcon from '@material-ui/icons/AddBoxRounded';\r\nimport InfoSharpIcon from '@material-ui/icons/InfoSharp';\r\nimport { Avatar } from '@material-ui/core';\r\nimport EditSharpIcon from '@material-ui/icons/EditSharp';\r\nimport DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport ReactQuill from 'react-quill'; // ES6\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport Dropzone from 'react-dropzone'\r\nimport axios from 'axios';\r\n// import AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\n\r\n\r\n//material ui styles for components\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n    },\r\n    large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '80%',\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #fff',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\n//function to get the styles above \r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\n//produnts component\r\n//this one is very big\r\nfunction Products() {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    //for adding product\r\n    const [name, setName] = useState('')\r\n    const [descritpion, setDescription] = useState('')\r\n    const [barcode, setBarcode] = useState('')\r\n    const [sku, setSku] = useState('')\r\n    const [quantity, setQuantity] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [price, setPrice] = useState('')\r\n    const [discount, setDiscount] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    // const [status, setStatus] = useState('')\r\n    const [picture, setPicture] = useState(null)\r\n    const [previewSrc, setPreviewSrc] = useState('')\r\n    const [isPreviewAvailable, setIsPreviewAvailable] = useState(false)\r\n    // const [errorMsg, setErrorMsg] = useState('')\r\n    const dropRef = useRef();\r\n\r\n\r\n\r\n    //fumction for adding new product\r\n    const addProduct = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const data = new FormData()\r\n            data.append(\"name\", name)\r\n            data.append('description', descritpion)\r\n            data.append('barcode', barcode)\r\n            data.append('sku', sku)\r\n            data.append('quantity', quantity)\r\n            data.append('price', price)\r\n            data.append('discount', discount)\r\n            data.append('brand', brand)\r\n            data.append('category', category)\r\n            data.append('drugPictures', picture)\r\n\r\n            const response = await fetch(`http://localhost:5050/api/v1/drug/add`, {\r\n                method: \"POST\",\r\n                mode: 'cors',\r\n                headers: {\r\n                    // 'Content-Type': `multipart/form-data`,\r\n                    'Authorization': localStorage.getItem('token'),\r\n                },\r\n                body: data\r\n            });\r\n            console.log(response)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    //finction for deleting the product\r\n    // const deleteProduct = (e) =>{\r\n    //     e.preventDefault()\r\n    // }\r\n    const onDrop = (files) => {\r\n        const [uploadedFile] = files;\r\n        setPicture(uploadedFile);\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewSrc(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(uploadedFile);\r\n        setIsPreviewAvailable(uploadedFile.name.match(/\\.(jpeg|jpg|png)$/));\r\n    };\r\n\r\n\r\n    //opening modal\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    //closing modal\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <DashboardLayout>\r\n                <div className=\"bg-white rounded flex flex-col\">\r\n                    <div className=\"products__header flex flex-row p-4 items-center mb-4\">\r\n                        <div className=\"search border-2 border-gray-200 rounded p-2 flex flex-row w-1/3\">\r\n                            <SearchRoundedIcon className=\"text-gray-400\" />\r\n                            <input type=\"text\" placeholder=\"Search Inventory\" className=\"outline-none bg-transparent\" />\r\n                        </div>\r\n                        <div className=\"flex-1\"></div>\r\n                        <span onClick={handleOpen} className=\"flex items-center flex-row bg-blue-700 text-white rounded p-2 cursor-pointer\">\r\n                            <AddBoxRoundedIcon />\r\n                            <p>Add Product</p>\r\n                        </span>\r\n                        <Modal\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            aria-labelledby=\"simple-modal-title\"\r\n                            aria-describedby=\"simple-modal-description\"\r\n                        >\r\n\r\n                            {/* modal to add products */}\r\n                            <div style={modalStyle} className={classes.paper}>\r\n                                {/* // eslint-disable-next-line */}\r\n                                <p className=\"text-xl\" id=\"simple-modal-title\" className=\"text-gray-500 mb-4\">New Product</p>\r\n                                <div className=\"flex flex-row mb-4\">\r\n                                    <input\r\n                                        value={name}\r\n                                        onChange={e => setName(e.target.value)}\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Name\"\r\n                                        className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                    <input\r\n                                        value={category}\r\n                                        onChange={e => setCategory(e.target.value)}\r\n                                        type=\"text\"\r\n                                        name=\"category\"\r\n                                        placeholder=\"Category\"\r\n                                        className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                </div>\r\n                                <div className=\"flex flex-col mb-4\">\r\n                                    <input\r\n                                        value={descritpion}\r\n                                        onChange={e => setDescription(e.target.value)}\r\n                                        placeholder=\"Description And Dosage\"\r\n                                        className=\"text-gray-500\"\r\n                                        className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                </div>\r\n                                <div className=\"border-b border-gray-300 w-full my-3\"></div>\r\n                                <div className=\"flex flex-col mb-4\">\r\n                                    <label htmlFor=\"pictures\">Product Pictures</label>\r\n                                    {/* //uploda the image */}\r\n                                    <div className=\"upload-section flex flex-row nd:flex-col\">\r\n                                        <Dropzone onDrop={onDrop}>\r\n                                            {({ getRootProps, getInputProps }) => (\r\n                                                <div {...getRootProps({ className: 'drop-zone bg-gray-300 rounded outline-none cursor-pointer hover:bg-gray-500' })} ref={dropRef}>\r\n                                                    <input {...getInputProps()} />\r\n                                                    <p>Drag and drop a file OR click here to select a file</p>\r\n                                                    {picture && (\r\n                                                        <div>\r\n                                                            <strong>Selected file:</strong> {picture.name}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            )}\r\n                                        </Dropzone>\r\n                                        {previewSrc ? (\r\n                                            isPreviewAvailable ? (\r\n                                                <div className=\"image-preview\">\r\n                                                    <img className=\"preview-image w-48 ml-8\" src={previewSrc} alt=\"Preview\" />\r\n                                                </div>\r\n                                            ) : (\r\n                                                    <div className=\"preview-message\">\r\n                                                        <p>No preview available for this file</p>\r\n                                                    </div>\r\n                                                )\r\n                                        ) : (\r\n                                                <div className=\"preview-message\">\r\n                                                    <p>Image preview will be shown here after selection</p>\r\n                                                </div>\r\n                                            )}\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"border-b border-gray-300 w-full my-3\"></div>\r\n                                <div className=\"flex flex-row mb-4\">\r\n                                    <input\r\n                                        value={barcode}\r\n                                        onChange={e => setBarcode(e.target.value)}\r\n                                        type=\"text\"\r\n                                        name=\"barcode\"\r\n                                        placeholder=\"Barcode\"\r\n                                        className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                    <input\r\n                                        value={sku}\r\n                                        onChange={e => setSku(e.target.value)}\r\n                                        type=\"text\"\r\n                                        name=\"sku\"\r\n                                        placeholder=\"SKU\"\r\n                                        className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                </div>\r\n                                <div className=\"flex flex-row mb-4\">\r\n                                    <input\r\n                                        value={brand}\r\n                                        onChange={e => setBrand(e.target.value)}\r\n                                        type=\"text\"\r\n                                        name=\"brandname\"\r\n                                        placeholder=\"Brand\"\r\n                                        className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                </div>\r\n                                <div className=\"flex flex-row mb-4\">\r\n                                    <input\r\n                                        value={quantity}\r\n                                        onChange={e => setQuantity(e.target.value)}\r\n                                        type=\"number\"\r\n                                        name=\"quantity\"\r\n                                        placeholder=\"Quantity\"\r\n                                        className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                    <input\r\n                                        value={price}\r\n                                        onChange={e => setPrice(e.target.value)}\r\n                                        type=\"number\"\r\n                                        name=\"price\"\r\n                                        placeholder=\"Price\"\r\n                                        className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                    <input\r\n                                        value={discount}\r\n                                        onChange={e => setDiscount(e.target.value)}\r\n                                        type=\"number\"\r\n                                        name=\"discoutPrice\"\r\n                                        placeholder=\"Discount\"\r\n                                        className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                </div>\r\n                                <div className=\"flex flex-row mb-4 justify-between\">\r\n                                    <button onClick={handleClose} className=\"bg-red-700 p-2 outline-none rounded border-none\">Close</button>\r\n                                    <button onClick={addProduct} className=\"bg-blue-700 p-2 outline-none rounded border-none\">Save Product</button>\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                    <>\r\n                        <ProductTable />\r\n                    </>\r\n\r\n                </div>\r\n            </DashboardLayout>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//table showing all products\r\n//request from backend done here also\r\nconst ProductTable = () => {\r\n\r\n    const [products, setProduct] = useState()\r\n\r\n    const user = localStorage.getItem('user')\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5050/api/v1/pharmacy/drugs/${JSON.parse(user).user_id}`, {\r\n            headers: {\r\n                'Authorization': localStorage.getItem('token'),\r\n            },\r\n        }).then(res => {\r\n            setProduct(res.data)\r\n        });\r\n    }, [user])\r\n\r\n    console.log(products)\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr className=\"bg-gray-200 text-sm text-gray-400 p-4\">\r\n                    <th className=\"py-4\">Image</th>\r\n                    <th>Category</th>\r\n                    <th>Name</th>\r\n                    <th>Barcode</th>\r\n                    <th>SKU</th>\r\n                    <th>Info</th>\r\n                    <th>Stock</th>\r\n                    <th>Status</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {products?.map(product => (\r\n                    <ProductComponent\r\n                        key={product._id}\r\n                        productname={product.name}\r\n                        productdescription={product.descritpion}\r\n                        productbarcode={product.barcode}\r\n                        productsku={product.sku}\r\n                        productquantity={product.quantity}\r\n                        productprice={product.price}\r\n                        productdiscount={product.discountPrice}\r\n                        productbrand=\"CABS\"\r\n                        productcategory={product.category}\r\n                        productpicture={`http://localhost:5050/${product.drugPictures[0].img}`}\r\n                        productstatus={product.status}\r\n                    />\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nconst ProductComponent = ({ productname,\r\n    productdescription,\r\n    productbarcode,\r\n    productsku,\r\n    productquantity,\r\n    productprice,\r\n    productdiscount,\r\n    productbrand,\r\n    productcategory,\r\n    productpicture,\r\n    productstatus\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    const [showEdit, setShowEdit] = React.useState(false);\r\n\r\n    //for edidting info\r\n    const [editname, setEditName] = useState('')\r\n    const [editdescritpion, setEditDescription] = useState('')\r\n    const [editbarcode, setEditBarcode] = useState('')\r\n    const [editsku, setEditSku] = useState('')\r\n    const [editquantity, setEditQuantity] = useState('')\r\n    const [editprice, setEditPrice] = useState('')\r\n    const [editdiscount, setEditDiscount] = useState('')\r\n    const [editbrand, setEditBrand] = useState('')\r\n    const [editcategory, setEditCategory] = useState('')\r\n    // const [editstatus, setEditStatus] = useState('')\r\n    const [editpicture, setEditPicture] = useState('')\r\n\r\n    //function for editing the product\r\n    const editProduct = (e) => {\r\n        e.preventDefault()\r\n        console.log(editpicture)\r\n    }\r\n\r\n    return (\r\n        <tr className=\"text-sm text-center border-b border-gray-300\">\r\n            <td className=\"py-4 pl-1 flex flex-col items-center\">\r\n                <Avatar src={productpicture} variant=\"rounded\" fontSize=\"small\" className={classes.small} />\r\n            </td>\r\n            <td>{productname}</td>\r\n            <td>{productcategory}</td>\r\n            <td>{productbarcode}</td>\r\n            <td>{productsku}</td>\r\n            <td>\r\n                <InfoSharpIcon fontSize=\"small\" />\r\n            </td>\r\n            <td>{productquantity}</td>\r\n            <td>{productstatus}</td>\r\n            <td>\r\n                <EditSharpIcon onClick={() => setShowEdit(true)} fontSize=\"small\" className=\"bg-blue-200 cursor-pointer rounded text-blue-700 mr-1\" />\r\n                {showEdit ? (\r\n                    <>\r\n                        <div\r\n                            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n                            onClick={() => setShowEdit(false)}\r\n                        >\r\n                            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n                                {/*content*/}\r\n                                <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                                    {/*header*/}\r\n                                    <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\r\n                                        <h3 className=\"text-3xl font-semibold\">\r\n                                            Modal Title\r\n                                                        </h3>\r\n                                        <button\r\n                                            className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                                            onClick={() => setShowEdit(false)}\r\n                                        >\r\n                                            <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                                                ×\r\n                                                            </span>\r\n                                        </button>\r\n                                    </div>\r\n                                    {/*body*/}\r\n                                    <div className=\"relative p-6 flex flex-col\">\r\n                                        <div className=\"flex flex-row mb-4\">\r\n                                            <input\r\n                                                value={editname}\r\n                                                onChange={e => setEditName(e.target.value)}\r\n                                                type=\"text\"\r\n                                                name=\"name\"\r\n                                                placeholder=\"Name\"\r\n                                                className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                            <input\r\n                                                value={editcategory}\r\n                                                onChange={e => setEditCategory(e.target.value)}\r\n                                                type=\"text\"\r\n                                                name=\"category\"\r\n                                                placeholder=\"Category\"\r\n                                                className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                        </div>\r\n                                        <div className=\"flex flex-col mb-4\">\r\n                                            <ReactQuill\r\n                                                value={editdescritpion}\r\n                                                onChange={e => setEditDescription(e.target.value)}\r\n                                                theme=\"snow\"\r\n                                                placeholder=\"Description And Dosage\"\r\n                                                className=\"text-gray-500\" />\r\n                                        </div>\r\n                                        <div className=\"flex flex-col mb-4\">\r\n                                            <label htmlFor=\"pictures\">Product Pictures</label>\r\n                                            <input\r\n                                                value={editpicture}\r\n                                                onChange={e => setEditPicture(e.target.files[0])}\r\n                                                type=\"file\"\r\n                                                name=\"pictures\"\r\n                                                id=\"pictures\" />\r\n                                        </div>\r\n                                        <div className=\"flex flex-row mb-4\">\r\n                                            <input\r\n                                                value={editbarcode}\r\n                                                onChange={e => setEditBarcode(e.target.value)}\r\n                                                type=\"text\"\r\n                                                name=\"barcode\"\r\n                                                placeholder=\"Barcode\"\r\n                                                className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                            <input\r\n                                                value={editsku}\r\n                                                onChange={e => setEditSku(e.target.value)}\r\n                                                type=\"text\"\r\n                                                name=\"sku\"\r\n                                                placeholder=\"SKU\"\r\n                                                className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                        </div>\r\n                                        <div className=\"flex flex-row mb-4\">\r\n                                            <input\r\n                                                value={editbrand}\r\n                                                onChange={e => setEditBrand(e.target.value)}\r\n                                                type=\"text\"\r\n                                                name=\"brandname\"\r\n                                                placeholder=\"Brand\"\r\n                                                className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                        </div>\r\n                                        <div className=\"flex flex-row mb-4\">\r\n                                            <input\r\n                                                value={editquantity}\r\n                                                onChange={e => setEditQuantity(e.target.value)}\r\n                                                type=\"number\"\r\n                                                name=\"quantity\"\r\n                                                placeholder=\"Quantity\"\r\n                                                className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                            <input\r\n                                                value={editprice}\r\n                                                onChange={e => setEditPrice(e.target.value)}\r\n                                                type=\"number\"\r\n                                                name=\"price\"\r\n                                                placeholder=\"Price\"\r\n                                                className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                            <input\r\n                                                value={editdiscount}\r\n                                                onChange={e => setEditDiscount(e.target.value)}\r\n                                                type=\"number\"\r\n                                                name=\"discoutPrice\"\r\n                                                placeholder=\"Discount\"\r\n                                                className=\"ouline-none border-2 border-gray-200 p-2 w-full mr-1 rounded\" />\r\n                                        </div>\r\n                                        <div className=\"flex flex-row mb-4 justify-between\">\r\n                                            <button style={{ transition: \"all .15s ease\" }} onClick={() => setShowEdit(false)} className=\"bg-red-700 p-2 outline-none rounded border-none\">Close</button>\r\n                                            <button style={{ transition: \"all .15s ease\" }} onClick={editProduct} className=\"bg-blue-700 p-2 outline-none rounded border-none\">Save Product</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n                    </>\r\n                ) : null}\r\n                <DeleteForeverRoundedIcon fontSize=\"small\" className=\"bg-red-200 rounded text-red-700 ml-1\" />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Products\r\n",["139","140"],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\HOC\\PharmacyRoute.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Login\\Login.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\StateContext\\reducer.js",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Payment\\Payment.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\App.js",[],["141","142"],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\index.js",[],["143","144"],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Checkout\\Checkout.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Layout\\DashboardLayout.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Navbar\\Navbar.jsx",["145","146","147","148","149"],"import React, { useState } from \"react\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport logo from '../../Images/blueLogo.png'\r\nimport { Link } from 'react-router-dom'\r\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useStateValue } from \"../../StateContext/StateProvider\";\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popper from \"popper.js\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n//material ui styles\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\n\r\n//mabbar parent container\r\nfunction Navbar({ fixed }) {\r\n  const [{ user }] = useStateValue()\r\n  return (\r\n    <>\r\n      {user ? (<AuthenticatedNavbar />) : (<UnAuthenticatedNavbar />)}\r\n    </>\r\n  );\r\n}\r\n\r\nconst NavbarSearch = () => {\r\n  const [query, setQuery] = useState('')\r\n  const [results, setResults] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n\r\n  const setStuff = (e) =>{\r\n    setLoading(true)\r\n    setQuery(e.target.value)\r\n    setMessage('')\r\n  }\r\n\r\n  return (\r\n    <span className=\"bg-gray-200 p-2 rounded-md text-gray-400\">\r\n      <SearchRoundedIcon />\r\n      <input\r\n        onChange={setStuff} \r\n        type=\"text\" \r\n        placeholder=\"Search For Medicine\" \r\n        className=\"bg-transparent outline-none\" \r\n        />\r\n    </span>\r\n  )\r\n}\r\n\r\n//navbar when user is unauthenticated\r\nconst UnAuthenticatedNavbar = () => {\r\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\r\n  const [{ basket }] = useStateValue()\r\n  return (\r\n    <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-1 navbar-expand-lg bg-white shadow\">\r\n      <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\r\n        <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\r\n          <Link to='/'\r\n            className=\"flex flex-row items-center font-bold leading-relaxed inline-block mr-4 whitespace-no-wrap uppercase text-gray-700\"\r\n          >\r\n            <img src={logo} alt=\"logo\" className=\"w-16\" />\r\n            <p>laimant</p>\r\n          </Link>\r\n          <button\r\n            className=\"text-gray-700 cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n            type=\"button\"\r\n            onClick={() => setNavbarOpen(!navbarOpen)}\r\n          >\r\n            <MenuIcon />\r\n          </button>\r\n        </div>\r\n        <div\r\n          className={\r\n            \"lg:flex flex-grow items-center\" +\r\n            (navbarOpen ? \" flex\" : \" hidden\")\r\n          }\r\n          id=\"example-navbar-danger\"\r\n        >\r\n          <ul className=\"flex flex-col lg:flex-row list-none items-center lg:ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavbarSearch />\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/checkout'\r\n                className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-gray-700 hover:opacity-75\"\r\n              >\r\n                <li className=\"font-sans block mt-4 lg:inline-block lg:mt-0 lg:ml-6 align-middle text-gray-700 hover:text-gray-700\">\r\n                  <p role=\"button\" className=\"relative flex\">\r\n                    <ShoppingCartOutlinedIcon fontSize=\"large\" />\r\n                    <span className=\"absolute right-0 top-0 rounded-full bg-red-600 w-4 h-4 top right p-0 m-0 text-white font-mono text-xs  leading-tight text-center\">{basket?.length}\r\n                    </span>\r\n                  </p>\r\n                </li>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/about'\r\n                className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-gray-700 hover:opacity-75\"\r\n              >\r\n                <p>about</p>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/login'\r\n                className=\"px-3 py-2 flex flex-row items-center text-xs uppercase font-bold leading-snug text-gray-700 hover:opacity-75\"\r\n              >\r\n                <Avatar />\r\n                <p>Login/Register</p>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n\r\n//navbar when user is authenticated\r\nconst AuthenticatedNavbar = () => {\r\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\r\n  const [{ user, basket }] = useStateValue()\r\n  return (\r\n    <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-1 navbar-expand-lg bg-white shadow\">\r\n      <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\r\n        <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\r\n          <Link to='/'\r\n            className=\"flex flex-row items-center font-bold leading-relaxed inline-block mr-4 whitespace-no-wrap uppercase text-gray-700\"\r\n          >\r\n            <img src={logo} alt=\"logo\" className=\"w-16\" />\r\n            <p>laimant</p>\r\n          </Link>\r\n          <button\r\n            className=\"text-gray-700 cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n            type=\"button\"\r\n            onClick={() => setNavbarOpen(!navbarOpen)}\r\n          >\r\n            <MenuIcon />\r\n          </button>\r\n        </div>\r\n        <div\r\n          className={\r\n            \"lg:flex flex-grow items-center\" +\r\n            (navbarOpen ? \" flex\" : \" hidden\")\r\n          }\r\n          id=\"example-navbar-danger\"\r\n        >\r\n          <ul className=\"flex flex-col lg:flex-row list-none items-center lg:ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavbarSearch />\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/checkout'\r\n                className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-gray-700 hover:opacity-75\"\r\n              >\r\n                <li className=\"font-sans block mt-4 lg:inline-block lg:mt-0 lg:ml-6 align-middle text-gray-700 hover:text-gray-700\">\r\n                  <p role=\"button\" className=\"relative flex\">\r\n                    <ShoppingCartOutlinedIcon fontSize=\"large\" />\r\n                    <span className=\"absolute right-0 top-0 rounded-full bg-red-600 w-4 h-4 top right p-0 m-0 text-white font-mono text-xs  leading-tight text-center\">{basket?.length}\r\n                    </span>\r\n                  </p>\r\n                </li>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {JSON.parse(user).role === 'pharmacy' ? (<Link to='/dashboard'\r\n                className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-gray-700 hover:opacity-75\"\r\n              >\r\n                <i className=\"text-lg leading-lg text-gray-700 opacity-75\"></i><span className=\"ml-2\">Dashboard</span>\r\n              </Link>) : null}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <span className=\"cursor-pointer\">\r\n                <Dropdown />\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\n//the cart icon\r\n\r\n\r\n//user icon with drop down for account and logout\r\nconst Dropdown = ({ color }) => {\r\n  const classes = useStyles();\r\n  // dropdown props\r\n  const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\r\n  const btnDropdownRef = React.createRef();\r\n  const popoverDropdownRef = React.createRef();\r\n  const openDropdownPopover = () => {\r\n    new Popper(btnDropdownRef.current, popoverDropdownRef.current, {\r\n      placement: \"bottom-start\"\r\n    });\r\n    setDropdownPopoverShow(true);\r\n  };\r\n  const closeDropdownPopover = () => {\r\n    setDropdownPopoverShow(false);\r\n  };\r\n  const logout = (e) => {\r\n    localStorage.removeItem('user')\r\n    localStorage.removeItem('token')\r\n    window.location.reload(false)\r\n  }\r\n\r\n  //setting user ro null on logout\r\n  const [{ user },] = useStateValue()\r\n  return (\r\n    <>\r\n      <div className=\"sticky top-0 z-100 bg-white flex flex-wrap\">\r\n        <div className=\"w-full sm:w-6/12 md:w-4/12 px-4\">\r\n          <div className=\"relative inline-flex align-middle w-full\">\r\n            <span\r\n              className=\"p-1 flex items-center border border-gray-700 rounded-full text-gray-700 ml-1 hover:bg-gray-200\"\r\n              style={{ transition: \"all .15s ease\" }}\r\n              type=\"button\"\r\n              ref={btnDropdownRef}\r\n              onClick={() => {\r\n                dropdownPopoverShow\r\n                  ? closeDropdownPopover()\r\n                  : openDropdownPopover();\r\n              }}\r\n            >\r\n              <Avatar className={classes.orange}>{JSON.parse(user).username.charAt(0)}</Avatar>\r\n              <p>{JSON.parse(user).username}</p>\r\n            </span>\r\n            <div\r\n              ref={popoverDropdownRef}\r\n              className={(dropdownPopoverShow ? \"block \" : \"hidden \") + \"text-base z-100 border border-gray-700 mr-8 text-white list-none text-left rounded shadow-lg mt-1 bg-white text-gray-800\"}\r\n              style={{ minWidth: '8rem' }}\r\n            >\r\n              <div className=\"h-0 my-2 border flex align-center border-solid opacity-25 hover:bg-gray-600\" />\r\n              <span\r\n                onClick={logout}\r\n                className=\"text-sm py-2 px-4 font-normal block w-full whitespace-no-wrap cursor-pointer\"\r\n              >\r\n                <ExitToAppIcon />\r\n              Logout\r\n            </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Home.jsx",["150","151","152"],"import React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport background from '../Images/register_bg_2.png'\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport covid from '../Images/covidess.jpg'\r\nimport pharmacySvg from '../Images/pharmacy.svg'\r\nimport ArrowForwardOutlinedIcon from '@material-ui/icons/ArrowForwardOutlined';\r\nimport AddShoppingCartOutlinedIcon from '@material-ui/icons/AddShoppingCartOutlined';\r\nimport DesktopLayout from '../Layout/DesktopLayout';\r\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport axios from 'axios';\r\nimport { useStateValue } from '../StateContext/StateProvider';\r\nimport Loading from '../Components/Loading/Loading';\r\n\r\n\r\n//home page parent container\r\nfunction Home() {\r\n\r\n  const [products, setProducts] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const getProducts = () => {\r\n    setLoading(true)\r\n    axios.get(\"http://localhost:5050/api/v1/drug/all\")\r\n      .then(function (response) {\r\n        setProducts(response.data.products)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProducts()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"bg-gray-50 min-h-screen\">\r\n      <DesktopLayout>\r\n        <div className=\"below_header md:block hidden\">\r\n          <ul className=\"flex flex-row py-2 justify-between items-center px-3\">\r\n            <li>Covid Essentials</li>\r\n            <li>Diabetes</li>\r\n            <li>Fitness</li>\r\n            <li>Eyewear</li>\r\n            <li>Sexual Wellness</li>\r\n            <li>Mom and Baby</li>\r\n            <li>Diagnistic Packages</li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"items-center bg-gradient-to-b w-full min-h-screen from-blue-800 to-gray-50\"  >\r\n          <div className=\"bg-opacity-75 justify-between flex flex-col p-8 md:flex-row\" style={{\r\n            backgroundImage: `url(${background})`,\r\n            backgroundSize: \"100%\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            minHeight: \"100vh\"\r\n          }}>\r\n            <div className=\"left py-8\">\r\n              <p className=\"text-4xl text-gray-900 font-bold\">Your Wellness, Our Heartbeat</p>\r\n              <p className=\"mt-8 w-2/3 text-gray-900\">Quickly find where your medicals are located and Stop wasting time</p>\r\n              <p className=\"w-2/3 text-gray-900\">Claimant is free to use for everyone in need of medication</p>\r\n              <div className=\"flex flex-row justify-between px-8 w-1/2\">\r\n                <Link to='/pharmacies' className=\"p-2 bg-blue-700 text-white rounded-md text-center mt-8 hover:bg-yellow-600 hover:text-gray-900 outline-none flex flex-row items-center\">\r\n                  <LocationSearchingIcon />\r\n                  <p>Pharmacies</p>\r\n                </Link>\r\n                <div className=\"mr-8\"></div>\r\n                <Link to='/register' className=\"p-2 bg-blue-700 text-white mt-8 rounded-md text-center hover:bg-yellow-600 hover:text-gray-900 outline-none flex flex-row items-center\">\r\n                  <PersonAddIcon />\r\n                  <p>Register</p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"right w-1/2\">\r\n              <img src={pharmacySvg} alt=\"undraw\" />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        {/* //component for showinng products */}\r\n        <div className=\"below px-8 mb-8\">\r\n          <div className=\"flex flex-col bg-white shadow p-4 rounded\">\r\n            <span className=\"flex flex-row justify-between\">\r\n              <p className=\"text-gray-500 text-sm uppercase font-bold\">Shop Now</p>\r\n              <Link to='/homeproducts' className=\"flex flex-row text-yellow-700 text-sm\">\r\n                <p>View All</p>\r\n                <ArrowForwardOutlinedIcon fontSize=\"small\" />\r\n              </Link>\r\n            </span>\r\n            <p className=\"text-xs capitalize text-gray-700\">Stay safe</p>\r\n            <div className=\"mb-2\"></div>\r\n            <div className=\"flex flex-col items-center\">\r\n              {loading === false ? (<div className=\"container flex flex-row flex-wrap items-center justify-between\">\r\n                {products?.map(product => (\r\n                  <HomeProducts\r\n                    key={product._id}\r\n                    name={product.name}\r\n                    picture={`http://localhost:5050/${product.drugPictures[0].img}`}\r\n                    category={product.category}\r\n                    price={product.price}\r\n                    discount={product.discountPrice}\r\n                    description={product.description}\r\n                    id={product._id}\r\n                    owner={product.createdBy}\r\n                    benefits={product.benefits}\r\n                    dosage={product.dosage}\r\n                    precaution={product.precaution}\r\n                  />\r\n                ))}\r\n              </div>) : (<Loading />)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* //component for showing categories */}\r\n        <div className=\"below px-8\">\r\n          <div className=\"flex flex-col bg-white shadow p-4 rounded\">\r\n            <span className=\"flex flex-row justify-between\">\r\n              <p className=\"text-gray-500 text-sm uppercase font-bold\">Our Categories</p>\r\n              <Link to='/homeproducts' className=\"flex flex-row text-yellow-700 text-sm\">\r\n                <p>View All</p>\r\n                <ArrowForwardOutlinedIcon fontSize=\"small\" />\r\n              </Link>\r\n            </span>\r\n            <p className=\"text-xs capitalize text-gray-700\">Stay safe</p>\r\n            <div className=\"mb-2\"></div>\r\n            {loading === false ? (<div className=\"container flex flex-row flex-wrap items-center justify-between\">\r\n              {products?.map(product =>(\r\n                <HomeCategories\r\n                name={product.category}\r\n                picture={covid}\r\n                description={product.description.slice(0, 50)}\r\n              />\r\n              ))}\r\n            </div>): (<Loading/>)}\r\n          </div>\r\n        </div>\r\n      </DesktopLayout>\r\n    </div>\r\n  )\r\n}\r\n\r\n//component for products\r\nconst HomeProducts = ({ id, name, picture, category, price, discount, description, owner, benefits, dosage, precaution }) => {\r\n\r\n  const [{ }, dispatch] = useStateValue()\r\n  const history = useHistory()\r\n\r\n  const addToBasket = (e) => {\r\n    e.preventDefault()\r\n    dispatch({\r\n      type: 'ADD_TO_BASKET',\r\n      item: {\r\n        id: id,\r\n        name: name,\r\n        description: description,\r\n        price: price,\r\n        picture: picture,\r\n        owner: owner,\r\n        discount: discount,\r\n        category: category\r\n      }\r\n    })\r\n  }\r\n\r\n  const setDesc = (e) => {\r\n    e.preventDefault()\r\n    const desc = {\r\n      id: id,\r\n      name: name,\r\n      description: description,\r\n      price: price,\r\n      picture: picture,\r\n      owner: owner,\r\n      discount: discount,\r\n      category: category,\r\n      benefits: benefits,\r\n      dosage: dosage,\r\n      precaution: precaution\r\n    }\r\n    localStorage.setItem('desc', JSON.stringify(desc))\r\n    history.push('/description')\r\n  }\r\n\r\n  return (\r\n    <div className=\"border border-gray-300 rounded-md p-2 w-48 flex flex-col m-3\">\r\n      <span className=\"flex flex-col cursor-pointer\" onClick={setDesc}>\r\n        <div className=\"poicture\" style={{ width: '160px', height: '160px' }} className=\"flex self-center flex-col justify-center\">\r\n          <img src={picture} alt=\"product__image\" className=\"w-full self-center\" />\r\n        </div>\r\n        <div className=\"mb-2\"></div>\r\n        <p className=\"text-sm text-gray-800 font-bold\">{name}</p>\r\n      </span>\r\n      <span className=\"flex flex-row text-left\">\r\n        <p className=\"text-gray-500 text-sm\">Cat:</p>\r\n        <div className=\"mr-4\"></div>\r\n        <p className=\"text-gray-500 text-sm\">{category}</p>\r\n      </span>\r\n      <span className=\"flex flex-row justify-between\">\r\n        <p className=\"text-gray-400\">${price}</p>\r\n        <p className=\"text-pink-500 text-lg font-bold\">${discount}</p>\r\n      </span>\r\n      <div className=\"mb-2\"></div>\r\n      <button onClick={addToBasket} className=\"p-1 text-white bg-blue-700 w-5/6 self-center rounded flex flex-row hover:bg-blue-500 items-center justify-around\">\r\n        <AddShoppingCartOutlinedIcon fontSize=\"small\" />\r\n        <p>Add To Cart</p>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\n//componet for categories\r\nconst HomeCategories = ({ name, picture, description }) => {\r\n  return (\r\n    <div className=\"border border-gray-300 rounded-md p-2 w-48 flex flex-col m-3\">\r\n      <div className=\"poicture\" className=\"flex self-center flex-col justify-center\">\r\n        <img src={picture} alt=\"product__image\" className=\"w-full self-center\" />\r\n      </div>\r\n      <div className=\"mb-2\"></div>\r\n      <p className=\"text-gray-700 font-bold\">{name}</p>\r\n      <span className=\"flex flex-row justify-between\">\r\n        <p className=\"text-gray-400 text-xs\">{description}...</p>\r\n      </span>\r\n      <div className=\"mb-2\"></div>\r\n      <button className=\"p-1 text-white bg-blue-700 w-5/6 self-center rounded flex flex-row hover:bg-blue-500 items-center justify-around\">\r\n        <p>Explore</p>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\nexport default Home\r\n",["153","154"],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Layout\\DesktopLayout.jsx",[],["155","156"],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Footer\\Footer.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\About\\About.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\StateContext\\StateProvider.js",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Customers\\Customers.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Settings\\Settings.jsx",["157","158"],"import React, { useState } from 'react'\r\nimport DashboardLayout from '../../Layout/DashboardLayout'\r\nimport pharmacyPic from '../../Images/customer-service.png'\r\nimport { Avatar } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useStateValue } from '../../StateContext/StateProvider';\r\nimport TuneIcon from '@material-ui/icons/Tune';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n    },\r\n    large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction Settings() {\r\n    const classes = useStyles();\r\n    const [{ pharmacy }] = useStateValue()\r\n    const [name, setName] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phonenumber, setPhonenumber] = useState('')\r\n    const user = localStorage.getItem('user')\r\n\r\n    // http://localhost:5050/api/v1/pharmacy/update/:id\r\n    const updateInfo = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const data = new FormData()\r\n            data.append(\"name\", name)\r\n            data.append('address', address)\r\n            data.append('email', email)\r\n            data.append('phonenumber', phonenumber)\r\n\r\n            const response = await fetch(`http://localhost:5050/api/v1/pharmacy/update/${JSON.parse(user).user_id}`, {\r\n                method: \"PUT\",\r\n                mode: 'cors',\r\n                headers: {\r\n                    // 'Content-Type': `multipart/form-data`,\r\n                    'Authorization': localStorage.getItem('token'),\r\n                },\r\n                body: data\r\n            });\r\n            console.log(response)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <DashboardLayout>\r\n            <div className=\"flex flex-col p-8\">\r\n                <p className=\"text-2xl font-bold text-gray-800 mb-8\">Settings</p>\r\n                <div className=\"logo flex flex-row items-center mb-4\">\r\n                    <Avatar src={pharmacyPic} className={classes.large} />\r\n                    <div className=\"m-8\"></div>\r\n                    <div className=\"buttons flex flex-row\">\r\n                        <button className=\"text-blue-700 rounded p-1 shadow hover:bg-gray-200\">Change</button>\r\n                        <div className=\"m-3\"></div>\r\n                        <button className=\"text-gray-700 rounded p-1 shadow hover:bg-gray-200\">Remove</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"border-b border-gray-400 w-full mb-4 mt-4\"></div>\r\n\r\n                {/* //form for changing the pharmcy info */}\r\n                <form onSubmit={updateInfo} className=\"flex flex-col\">\r\n                    <div className=\"names flex flex-row\">\r\n                        <div className=\"pharm_name flex flex-col w-5/6\">\r\n                            <label htmlFor=\"name\" className=\"flex flex-row justify-between\">\r\n                                <p className=\"text-gray-800\">Pharmacy Name</p>\r\n                                <p className=\"text-sm text-gray-400\">Visible To All</p>\r\n                            </label>\r\n                            <input\r\n                                value={name}\r\n                                onChange={e => setName(e.target.value)}\r\n                                type=\"text\"\r\n                                className=\"border-2 border-gray-300 rounded bg-gray-100 p-2\"\r\n                                placeholder={`${pharmacy?.name}`} />\r\n                        </div>\r\n                        <div className=\"m-4\"></div>\r\n                        <div className=\"pharm_name flex flex-col w-5/6\">\r\n                            <label htmlFor=\"name\" className=\"flex flex-row justify-between\">\r\n                                <p className=\"text-gray-800\">Address</p>\r\n                                <p className=\"text-sm text-gray-400\">Visible To All</p>\r\n                            </label>\r\n                            <input\r\n                                value={address}\r\n                                onChange={e => setAddress(e.target.value)}\r\n                                type=\"text\"\r\n                                className=\"border-2 border-gray-300 rounded bg-gray-100 p-2\"\r\n                                placeholder={`${pharmacy?.address}`} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"border-b border-gray-400 w-full mb-4 mt-4\"></div>\r\n                    <div className=\"names flex flex-row\">\r\n                        <div className=\"pharm_name flex flex-col w-5/6\">\r\n                            <label htmlFor=\"name\" className=\"flex flex-row justify-between\">\r\n                                <p className=\"text-gray-800\">Email</p>\r\n                                <p className=\"text-sm text-gray-400\">Visible To All</p>\r\n                            </label>\r\n                            <input\r\n                                type={email}\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                type=\"text\"\r\n                                className=\"border-2 border-gray-300 rounded bg-gray-100 p-2\"\r\n                                placeholder={`${pharmacy?.email}`} />\r\n                        </div>\r\n                        <div className=\"m-4\"></div>\r\n                        <div className=\"pharm_name flex flex-col w-5/6\">\r\n                            <label htmlFor=\"name\" className=\"flex flex-row justify-between\">\r\n                                <p className=\"text-gray-800\">Phone Number</p>\r\n                                <p className=\"text-sm text-gray-400\">Visible To All</p>\r\n                            </label>\r\n                            <input\r\n                                type={phonenumber}\r\n                                onChange={e => setPhonenumber(e.target.value)}\r\n                                type=\"text\"\r\n                                className=\"border-2 border-gray-300 rounded bg-gray-100 p-2\"\r\n                                placeholder={`${pharmacy?.phonenumber}`} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"my-2\"></div>\r\n                    <button type=\"submit\" className=\"text-blue-700 border border-blue-700 rounded p-2 hover:bg-blue-700 hover:text-white self-end\">Update Info</button>\r\n                </form>\r\n                <div className=\"border-b border-gray-400 w-full mb-4 mt-4\"></div>\r\n                <div className=\"p-4 rounded bg-gray-800 text-gray-300 flex flex-row items-center\">\r\n                    <TuneIcon />\r\n                    <span className=\"flex flex-col ml-2\">\r\n                        <p className=\"text-xl\">Appearence</p>\r\n                        <p className=\"text-sm text-gray-500\">Change How Dashboard Appears</p>\r\n                    </span>\r\n                    <div className=\"flex-1\"></div>\r\n                    <ArrowRightAltIcon fontSize=\"large\" />\r\n                </div>\r\n                <div className=\"my-2\"></div>\r\n                <div className=\"delete flex flex-row justify-between\">\r\n                    <span className=\"flex flex-col\">\r\n                        <p className=\"text-gray-700 font-bold\">Delete Account</p>\r\n                        <p className=\"text-sm\">By Deleting account you lose all benefits</p>\r\n                    </span>\r\n                    <div className=\"flex-1\"></div>\r\n                    <div className=\"delte\">\r\n                        <button\r\n                            className=\"text-red-400 border border-red-700 rounded p-2 hover:bg-red-400 hover:text-white\">\r\n                            Delete Account</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </DashboardLayout>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\PharmacyInfo\\PharmacyInfo.jsx",[],["159","160"],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Orders\\Orders.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Dashboard\\Dashboard.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\ProductDescription\\ProductDescription.jsx",["161"],"import React from 'react'\r\nimport DesktopLayout from '../../Layout/DesktopLayout'\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\nimport { useStateValue } from '../../StateContext/StateProvider';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProductDescription() {\r\n    const desc = localStorage.getItem('desc')\r\n\r\n    const [{ }, dispatch] = useStateValue()\r\n    const addToBasket = (e) => {\r\n        e.preventDefault()\r\n        dispatch({\r\n            type: 'ADD_TO_BASKET',\r\n            item: {\r\n                id: JSON.parse(desc).id,\r\n                name: JSON.parse(desc).name,\r\n                description: JSON.parse(desc).description,\r\n                price: JSON.parse(desc).price,\r\n                picture: JSON.parse(desc).picture,\r\n                owner: JSON.parse(desc).owner,\r\n                discount: JSON.parse(desc).discount,\r\n                category: JSON.parse(desc).category\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <DesktopLayout>\r\n            <div className=\"min-h-screen flex flex-row p-8\">\r\n                <div className=\"left flex flex-col w-1/2\">\r\n                    <Link to='/' className=\"flex flex-row items-center text-gray-400 mb-4\">\r\n                        <KeyboardBackspaceIcon />\r\n                        <p>Continue Shopping</p>\r\n                    </Link>\r\n                    <div className=\"border-b border-gray-300 w-full my-4\"></div>\r\n                    <img src={JSON.parse(desc).picture} alt=\"description_picture\" className=\"self-center\" />\r\n                </div>\r\n                <div className=\"w-1/2 flex flex-col px-4\">\r\n                    <p className=\"text-2xl text-gray-800\">{JSON.parse(desc).name}</p>\r\n                    <div className=\"mb-3\"></div>\r\n                    <div className=\"categories flex flex-row\">\r\n                        <p className=\"bg-gray-200 rounded p-1 text-xs\">{JSON.parse(desc).category}</p>\r\n                        <div className=\"flex-1\"></div>\r\n                    </div>\r\n                    <div className=\"border-b border-gray-300 w-full my-4\"></div>\r\n                    <div className=\"flex flex-row items-center mb-2\">\r\n                        <p className=\"text-blue-700 font-bold text-xl\">${\" \"}{JSON.parse(desc).price}</p>\r\n                        <div className=\"mr-3\"></div>\r\n                        <p className=\"text-gray-700 text-xs\">Discount Price is {\" \"}${\" \"}{JSON.parse(desc).discount}</p>\r\n                    </div>\r\n                    <span className=\"mb-3\">\r\n                        <p className=\"font-bold text-xs text-gray-500\">Description: {\" \"}</p>\r\n                        <p className=\"text-xs text-gray-700 text-left\">{\" \"}{JSON.parse(desc).description}</p>\r\n                    </span>\r\n                    <div className=\"flex flex-row justify-between px-3\">\r\n                        <input type=\"number\" className=\"outline-none w-16 border border-gray-500 rounded\" placeholder=\"QTY\" />\r\n                        <div className=\"flex flex-col\">\r\n                            <p className=\"text-gray-400 uppercase text-sm\">Total Price</p>\r\n                            <p className=\"text-gray-700 font-bold\">${\" \"}{JSON.parse(desc).price}</p>\r\n                        </div>\r\n                        <button onClick={addToBasket} className=\"text-white bg-blue-700 rounded outline-none px-1\">Add To Cart</button>\r\n                    </div>\r\n                    <div className=\"border-b border-gray-300 w-full my-4\"></div>\r\n                    <div className=\"flex flex-col p-1\">\r\n                        <p className=\"text-gray-700 font-bold\">Precautions & Dosage</p>\r\n                        <p className=\"text-sm\">{JSON.parse(desc).precautions}</p>\r\n                        <p className=\"text-sm\">{JSON.parse(desc).dosage}</p>\r\n                    </div>\r\n                    <div className=\"border-b border-gray-300 w-full my-4\"></div>\r\n                    <div className=\"flex items-center flex-row p-4 bg-gray-200 rounded shadow\">\r\n                        <CategoryIcon className=\"text-blue-700 mr-3\" fontSize=\"large\" />\r\n                        <div className=\"flex flex-col\">\r\n                            <p className=\"font-bold text-gray-600\">Other Categories</p>\r\n                            <p className=\"text-sm\">View Realated Categories</p>\r\n                        </div>\r\n                        <div className=\"flex-1\"></div>\r\n                        <div className=\"flex flex-row items-center text-yellow-500\">\r\n                            <p>more</p>\r\n                            <ArrowRightAltIcon />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </DesktopLayout>\r\n    )\r\n}\r\n\r\nexport default ProductDescription\r\n","C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Pharmacies\\Pharmacies.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Patients\\Patients.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Dashboard\\Notifications\\Notifications.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\Register\\Register.jsx",["162"],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\HomeProducts\\HomeProducts.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Loading\\FillSpinner\\index.js",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Loading\\Loading.jsx",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Loading\\Domino\\index.js",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Components\\Loading\\Grid\\index.js",[],"C:\\Users\\tatendaZw\\Documents\\Projects\\delivery\\frontend\\src\\Pages\\PharmacyCatalogue\\PharmacyCatalogue.jsx",[],{"ruleId":"163","severity":1,"message":"164","line":165,"column":80,"nodeType":"165","endLine":165,"endColumn":110},{"ruleId":"163","severity":1,"message":"164","line":188,"column":41,"nodeType":"165","endLine":188,"endColumn":113},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"166","replacedBy":"170"},{"ruleId":"168","replacedBy":"171"},{"ruleId":"166","replacedBy":"172"},{"ruleId":"168","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":43,"column":10,"nodeType":"176","messageId":"177","endLine":43,"endColumn":15},{"ruleId":"174","severity":1,"message":"178","line":44,"column":10,"nodeType":"176","messageId":"177","endLine":44,"endColumn":17},{"ruleId":"174","severity":1,"message":"179","line":44,"column":19,"nodeType":"176","messageId":"177","endLine":44,"endColumn":29},{"ruleId":"174","severity":1,"message":"180","line":45,"column":10,"nodeType":"176","messageId":"177","endLine":45,"endColumn":17},{"ruleId":"174","severity":1,"message":"181","line":46,"column":10,"nodeType":"176","messageId":"177","endLine":46,"endColumn":17},{"ruleId":"182","severity":1,"message":"183","line":148,"column":10,"nodeType":"184","messageId":"185","endLine":148,"endColumn":13},{"ruleId":"163","severity":1,"message":"164","line":190,"column":79,"nodeType":"165","endLine":190,"endColumn":131},{"ruleId":"163","severity":1,"message":"164","line":218,"column":33,"nodeType":"165","endLine":218,"endColumn":85},{"ruleId":"166","replacedBy":"186"},{"ruleId":"168","replacedBy":"187"},{"ruleId":"166","replacedBy":"188"},{"ruleId":"168","replacedBy":"189"},{"ruleId":"163","severity":1,"message":"164","line":117,"column":33,"nodeType":"165","endLine":117,"endColumn":44},{"ruleId":"163","severity":1,"message":"164","line":130,"column":33,"nodeType":"165","endLine":130,"endColumn":44},{"ruleId":"166","replacedBy":"190"},{"ruleId":"168","replacedBy":"191"},{"ruleId":"182","severity":1,"message":"183","line":12,"column":12,"nodeType":"184","messageId":"185","endLine":12,"endColumn":15},{"ruleId":"174","severity":1,"message":"192","line":16,"column":10,"nodeType":"176","messageId":"177","endLine":16,"endColumn":15},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["193"],"no-negated-in-lhs",["194"],["193"],["194"],["193"],["194"],"no-unused-vars","'query' is assigned a value but never used.","Identifier","unusedVar","'results' is assigned a value but never used.","'setResults' is assigned a value but never used.","'loading' is assigned a value but never used.","'message' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["193"],["194"],["193"],["194"],["193"],["194"],"'agree' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]